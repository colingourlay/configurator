name: Electron Release

on:
  repository_dispatch:
  release:
    types: [created, unpublished, prereleased]
  push:
    tags:
      - 'v*'

jobs:
  build_linux:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Install libudev
      run: sudo apt-get install -y libudev-dev
    - name: Setup node env
      uses: actions/setup-node@v1
      with:
        node-version: 10.16
    - name: Install project dependencies
      run: |
        yarn
        yarn rebuild-deps
    - name: Compile project
      run: yarn dist --linux
    - name: Attach builder config
      uses: actions/upload-artifact@master
      with:
        name: builder-effective-config.yaml
        path: output/builder-effective-config.yaml
    - name: Attach linux config
      uses: actions/upload-artifact@master
      with:
        name: latest-linux.yml
        path: output/latest-linux.yml
    - name: Create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }} - Linux
        draft: true
        prerelease: true
    - name: Upload tar.gz
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: output/hexgears-configurator-1.0.3-linux-x64.tar.gz
        asset_name: hexgears-configurator-${{ github.ref }}-linux-x64.tar.gz
        asset_content_type: application/gzip
    - name: Upload AppImage
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/hexgears-configurator-1.0.3-linux-x86_64.AppImage
        asset_name: hexgears-configurator-${{ github.ref }}-linux-x86_64.AppImage
        asset_content_type: application/x-executable

  build_mac:
    name: OSX Build
    runs-on: macOS-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Setup node env
      uses: actions/setup-node@v1
      with:
        node-version: 10.16
    - name: Install project dependencies
      run: |
        yarn
        yarn rebuild-deps
    - name: Compile project
      run: yarn dist --mac
    - name: Attach builder config
      uses: actions/upload-artifact@master
      with:
        name: builder-effective-config.yaml
        path: output/builder-effective-config.yaml
    - name: Create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }} - Mac
        draft: true
        prerelease: true
    - name: Upload zip
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/hexgears-configurator-1.0.3-mac.zip
        asset_name: hexgears-configurator-${{ github.ref }}-mac.zip
        asset_content_type: application/zip
    - name: Upload dmg
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/hexgears-configurator-1.0.3-mac.dmg
        asset_name: hexgears-configurator-${{ github.ref }}-mac.dmg
        asset_content_type: application/x-executable

  build_windows:
    name: Windows Build
    runs-on: windows-2016
    steps:
    - name: Checkout repo
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Setup node env
      uses: actions/setup-node@v1
      with:
        node-version: 10.16
    - name: Install project dependencies
      run: |
        yarn
        yarn rebuild-deps
    - name: Compile project
      run: |
        yarn dist
        yarn dist --win --x64
    - name: Attach builder config
      uses: actions/upload-artifact@master
      with:
        name: builder-effective-config.yaml
        path: output/builder-effective-config.yaml
    - name: Create release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }} - Windows
        draft: true
        prerelease: true
    - name: Upload zip
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/hexgears-configurator-1.0.3-win-x64.zip
        asset_name: hexgears-configurator-${{ github.ref }}-win-x64.zip
        asset_content_type: application/zip
    - name: Upload exe
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: output/hexgears-configurator-1.0.3-win.exe
        asset_name: hexgears-configurator-${{ github.ref }}-win-x64.exe
        asset_content_type: application/x-executable
